<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.WorkerMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加医疗工作者记录 -->
	<insert id="addWorker" parameterType="worker">
		insert into t_worker(workUserName,password,name,gender,birthDate,zzxx,telephone,email,address,workerDesc) values 
		(#{workUserName},#{password},#{name},#{gender},#{birthDate},#{zzxx},#{telephone},#{email},#{address},#{workerDesc})
	</insert>

	<!-- 按照查询条件分页查询医疗工作者记录 -->
	<select id="queryWorker" resultMap="workerMap" >
		select t_worker.* from t_worker ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="workerMap" type="worker">
        <id property="workUserName" column="workUserName" />
    </resultMap>

    <!-- 按照查询条件查询所有医疗工作者记录 -->
	<select id="queryWorkerList" resultMap="workerMap" >
		select t_worker.* from t_worker ${where}
	</select>

    <!-- 按照查询条件的医疗工作者记录数 -->
	<select id="queryWorkerCount" resultType="int">
		select count(*) from t_worker ${where}
	</select>

	<!-- 根据主键查询某个医疗工作者记录 -->
	<select id="getWorker" parameterType="string" resultMap="workerMap">
		select * from t_worker where t_worker.workUserName = #{workUserName}
	</select>

	<!-- 更新医疗工作者记录 -->
	<update id="updateWorker" parameterType="worker">
		update t_worker set password=#{password},name=#{name},gender=#{gender},birthDate=#{birthDate},zzxx=#{zzxx},telephone=#{telephone},email=#{email},address=#{address},workerDesc=#{workerDesc} where workUserName = #{workUserName}
	</update>

	<!-- 删除医疗工作者记录 -->
	<delete id="deleteWorker" parameterType="string">
		delete from t_worker where workUserName=#{workUserName}
	</delete>

</mapper>
